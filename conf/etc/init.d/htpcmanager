#!/bin/sh
#sic
### BEGIN INIT INFO
# Provides:          HTPC-Manager
# Required-Start:    $local_fs $network $remote_fs
# Required-Stop:     $local_fs $network $remote_fs
# Should-Start:      $NetworkManager
# Should-Stop:       $NetworkManager
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: starts instance of HTPC-Manager
# Description:       starts instance of HTPC-Manager using start-stop-daemon
### END INIT INFO

# Source HTPC-Manager configuration
if [ -f /etc/default/htpcmanager ]; then
    . /etc/default/htpcmanager
else
    echo "/etc/default/htpcmanager not found using default settings.";
fi

# Source init functions
. /lib/lsb/init-functions

# Script name
NAME=htpcmanager

# App name
DESC=HTPC-Manager

## Don't edit this file
## Edit user configuation in /etc/default/htpcmanager to change
##
## HM_USER=         #$RUN_AS, username to run HTPC-Manager under, the default is htpcmanager
## HM_HOME=         #$APP_PATH, the location of hypc.py, the default=/opt/HTPCManager
## HM_DATA=         #$DATA_DIR, the location of db, cache, logs, the default=/opt/HTPCManager
## HM_PORT=         #$PORT, the port HTPC-Manager runs on, the default=8085
## HM_PIDFILE=      #$PID_FILE, the location of htpc-manager.pid, the default=/var/run/htpc-manager/htpc-manager.pid
## PYTHON_BIN=      #$DAEMON, the location of the python binary, the default=/usr/bin/python
## HM_OPTS=         #$EXTRA_DAEMON_OPTS, extra cli option for HTPC-Manager
##
## EXAMPLE if want to run as different user
## add HM_USER=username to /etc/default/htpcmanager
## otherwise default htpcmanager is used

## The defaults
# Run as username
RUN_AS=${HM_USER-htpcmanager}

# Path to app SR_HOME=path_to_app_htpc.py
APP_PATH=${HM_HOME-/opt/HTPCManager}

# Data directory where htpcmanager.db, cache and logs are stored
DATA_DIR=${HM_DATA-/opt/HTPCManager}

#
PORT=${HM_PORT-8085}

# Path to store PID file
PID_FILE=${HM_PIDFILE-/var/run/htpc-manager/htpc-manager.pid}

# path to python bin
DAEMON=${PYTHON_BIN-/usr/bin/python}

# Extra daemon option
EXTRA_DAEMON_OPTS=${HM_OPTS-}

##

PID_PATH=`dirname $PID_FILE`
DAEMON_OPTS=" Htpc.py --pid=${PID_FILE} --datadir ${DATA_DIR} --port=${PORT} ${EXTRA_DAEMON_OPTS}"

##

test -x $DAEMON || exit 0

set -e

# Create PID directory if not exist and ensure the HTPC-Manager user can write to it
if [ ! -d $PID_PATH ]; then
    mkdir -p $PID_PATH
    chown $RUN_AS $PID_PATH
fi

if [ ! -d $DATA_DIR ]; then
    mkdir -p $DATA_DIR
    chown $RUN_AS $DATA_DIR
fi

if [ -e $PID_FILE ]; then
    PID=`cat $PID_FILE`
    if ! kill -0 $PID > /dev/null 2>&1; then
        echo "Removing stale $PID_FILE"
        rm $PID_FILE
    fi
fi

start_htpcmanager() {
    echo "Starting $DESC"
    start-stop-daemon -d $APP_PATH -c $RUN_AS --start --background --pidfile $PID_FILE --make-pidfile --exec $DAEMON $
}

stop_htpcmanager() {
    echo "Stopping $DESC"
    start-stop-daemon --stop --pidfile $PID_FILE --retry 15
}

case "$1" in
    start)
        start_htpcmanager
        ;;
    stop)
        stop_htpcmanager
        ;;

    restart|force-reload)
        stop_htpcmanager
        sleep 2
        start_htpcmanager
        ;;
    status)
        status_of_proc -p "$PID_FILE" "$DAEMON" "$DESC"
        ;;
    *)
        N=/etc/init.d/$NAME
        echo "Usage: $N {start|stop|restart|force-reload}" >&2
        exit 1
        ;;
esac

exit 0
